{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/ML Paper Assitant/frontend/src/components/PublicChats.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, List, ListItem, ListItemText, Typography, Paper, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nconst PublicChats = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPublicChats();\n  }, []);\n  const fetchPublicChats = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/chats/public`);\n      setChats(response.data.chats);\n    } catch (error) {\n      console.error('Error fetching public chats:', error);\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Public Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [chats.map((chat, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => navigate(`/chat/${chat.chat_id}`),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `Chat ${chat.chat_id.slice(0, 8)}...`,\n              secondary: `Created: ${formatDate(chat.created_at)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), index < chats.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 44\n          }, this)]\n        }, chat.chat_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)), chats.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"No public chats available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicChats, \"L0STcbf/h6bsTznw8uKbylxDmV4=\", false, function () {\n  return [useNavigate];\n});\n_c = PublicChats;\nexport default PublicChats;\nvar _c;\n$RefreshReg$(_c, \"PublicChats\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","List","ListItem","ListItemText","Typography","Paper","Divider","axios","jsxDEV","_jsxDEV","API_BASE_URL","PublicChats","_s","chats","setChats","navigate","fetchPublicChats","response","get","data","error","console","formatDate","dateString","Date","toLocaleString","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","map","chat","index","Fragment","button","onClick","chat_id","primary","slice","secondary","created_at","length","_c","$RefreshReg$"],"sources":["/Users/vaibhav/ML Paper Assitant/frontend/src/components/PublicChats.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Paper,\n  Divider,\n} from '@mui/material';\nimport axios from 'axios';\n\ninterface PublicChat {\n  chat_id: string;\n  created_at: string;\n}\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst PublicChats: React.FC = () => {\n  const [chats, setChats] = useState<PublicChat[]>([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPublicChats();\n  }, []);\n\n  const fetchPublicChats = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/chats/public`);\n      setChats(response.data.chats);\n    } catch (error) {\n      console.error('Error fetching public chats:', error);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Public Chats\n      </Typography>\n      <Paper elevation={3}>\n        <List>\n          {chats.map((chat, index) => (\n            <React.Fragment key={chat.chat_id}>\n              <ListItem\n                button\n                onClick={() => navigate(`/chat/${chat.chat_id}`)}\n              >\n                <ListItemText\n                  primary={`Chat ${chat.chat_id.slice(0, 8)}...`}\n                  secondary={`Created: ${formatDate(chat.created_at)}`}\n                />\n              </ListItem>\n              {index < chats.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n          {chats.length === 0 && (\n            <ListItem>\n              <ListItemText primary=\"No public chats available\" />\n            </ListItem>\n          )}\n        </List>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default PublicChats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/ML Paper Assitant/frontend/src/components/ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button, Paper, Typography, IconButton, List, ListItem, Divider, Switch, FormControlLabel } from '@mui/material';\nimport { Send as SendIcon, Share as ShareIcon } from '@mui/icons-material';\nimport axios from 'axios';\nimport 'katex/dist/katex.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nconst ChatInterface = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (chatId) {\n      fetchChatHistory();\n    } else {\n      createNewChat();\n    }\n  }, [chatId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const createNewChat = async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chats`, {\n        is_public: isPublic\n      });\n      navigate(`/chat/${response.data.chat_id}`);\n    } catch (error) {\n      console.error('Error creating chat:', error);\n    }\n  };\n  const fetchChatHistory = async () => {\n    if (!chatId) return;\n    try {\n      const response = await axios.get(`${API_BASE_URL}/chats/${chatId}`);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim() || !chatId) return;\n    const userMessage = {\n      content: input,\n      role: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    try {\n      // First, save the user message\n      await axios.post(`${API_BASE_URL}/chats/${chatId}/messages`, userMessage);\n\n      // Then, search for papers and generate response\n      const searchResponse = await axios.get(`${API_BASE_URL}/search`, {\n        params: {\n          query: input\n        }\n      });\n      const papers = searchResponse.data.papers;\n      const assistantMessage = {\n        content: `Here are some relevant papers:\\n\\n${papers.map(paper => `- ${paper.title}\\n  Authors: ${paper.authors.join(', ')}\\n  Summary: ${paper.summary}\\n`).join('\\n')}`,\n        role: 'assistant'\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      await axios.post(`${API_BASE_URL}/chats/${chatId}/messages`, assistantMessage);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleShare = async () => {\n    if (!chatId) return;\n    try {\n      await axios.post(`${API_BASE_URL}/chats/${chatId}`, {\n        is_public: true\n      });\n      setIsPublic(true);\n      // You can add a share URL copy functionality here\n    } catch (error) {\n      console.error('Error sharing chat:', error);\n    }\n  };\n  const renderMessage = message => {\n    const isUser = message.role === 'user';\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        display: 'flex',\n        justifyContent: isUser ? 'flex-end' : 'flex-start',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 1,\n        sx: {\n          p: 2,\n          maxWidth: '70%',\n          bgcolor: isUser ? 'primary.main' : 'grey.100',\n          color: isUser ? 'white' : 'text.primary'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: message.content.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"ML Paper Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: isPublic,\n            onChange: e => setIsPublic(e.target.checked),\n            disabled: !!chatId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this),\n          label: \"Public Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), chatId && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleShare,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        mb: 2,\n        p: 2,\n        bgcolor: 'background.paper'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [renderMessage(message), index < messages.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 47\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Ask about ML papers...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSend,\n        disabled: !input.trim(),\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"UCTIJlkkXX0OOas4Cxdwkb9mN0s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","Box","TextField","Button","Paper","Typography","IconButton","List","ListItem","Divider","Switch","FormControlLabel","Send","SendIcon","Share","ShareIcon","axios","jsxDEV","_jsxDEV","API_BASE_URL","ChatInterface","_s","chatId","navigate","messages","setMessages","input","setInput","isPublic","setIsPublic","messagesEndRef","fetchChatHistory","createNewChat","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","response","post","is_public","data","chat_id","error","console","get","handleSend","trim","userMessage","content","role","prev","searchResponse","params","query","papers","assistantMessage","map","paper","title","authors","join","summary","handleShare","renderMessage","message","isUser","sx","display","justifyContent","mb","children","elevation","p","maxWidth","bgcolor","color","variant","split","line","i","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","height","flexDirection","alignItems","control","checked","onChange","e","target","disabled","label","onClick","flex","overflow","index","length","ref","gap","fullWidth","placeholder","value","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/vaibhav/ML Paper Assitant/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  TextField,\n  Button,\n  Paper,\n  Typography,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch,\n  FormControlLabel,\n} from '@mui/material';\nimport { Send as SendIcon, Share as ShareIcon } from '@mui/icons-material';\nimport axios from 'axios';\nimport 'katex/dist/katex.min.css';\nimport { InlineMath, BlockMath } from 'react-katex';\n\ninterface Message {\n  content: string;\n  role: 'user' | 'assistant';\n}\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst ChatInterface: React.FC = () => {\n  const { chatId } = useParams<{ chatId: string }>();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (chatId) {\n      fetchChatHistory();\n    } else {\n      createNewChat();\n    }\n  }, [chatId]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const createNewChat = async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chats`, { is_public: isPublic });\n      navigate(`/chat/${response.data.chat_id}`);\n    } catch (error) {\n      console.error('Error creating chat:', error);\n    }\n  };\n\n  const fetchChatHistory = async () => {\n    if (!chatId) return;\n    try {\n      const response = await axios.get(`${API_BASE_URL}/chats/${chatId}`);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim() || !chatId) return;\n\n    const userMessage: Message = { content: input, role: 'user' };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n\n    try {\n      // First, save the user message\n      await axios.post(`${API_BASE_URL}/chats/${chatId}/messages`, userMessage);\n\n      // Then, search for papers and generate response\n      const searchResponse = await axios.get(`${API_BASE_URL}/search`, {\n        params: { query: input }\n      });\n\n      const papers = searchResponse.data.papers;\n      const assistantMessage: Message = {\n        content: `Here are some relevant papers:\\n\\n${papers.map((paper: any) => \n          `- ${paper.title}\\n  Authors: ${paper.authors.join(', ')}\\n  Summary: ${paper.summary}\\n`\n        ).join('\\n')}`,\n        role: 'assistant'\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n      await axios.post(`${API_BASE_URL}/chats/${chatId}/messages`, assistantMessage);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleShare = async () => {\n    if (!chatId) return;\n    try {\n      await axios.post(`${API_BASE_URL}/chats/${chatId}`, { is_public: true });\n      setIsPublic(true);\n      // You can add a share URL copy functionality here\n    } catch (error) {\n      console.error('Error sharing chat:', error);\n    }\n  };\n\n  const renderMessage = (message: Message) => {\n    const isUser = message.role === 'user';\n    return (\n      <ListItem\n        sx={{\n          display: 'flex',\n          justifyContent: isUser ? 'flex-end' : 'flex-start',\n          mb: 2,\n        }}\n      >\n        <Paper\n          elevation={1}\n          sx={{\n            p: 2,\n            maxWidth: '70%',\n            bgcolor: isUser ? 'primary.main' : 'grey.100',\n            color: isUser ? 'white' : 'text.primary',\n          }}\n        >\n          <Typography variant=\"body1\">\n            {message.content.split('\\n').map((line, i) => (\n              <React.Fragment key={i}>\n                {line}\n                <br />\n              </React.Fragment>\n            ))}\n          </Typography>\n        </Paper>\n      </ListItem>\n    );\n  };\n\n  return (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\">ML Paper Search</Typography>\n        <Box>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isPublic}\n                onChange={(e) => setIsPublic(e.target.checked)}\n                disabled={!!chatId}\n              />\n            }\n            label=\"Public Chat\"\n          />\n          {chatId && (\n            <IconButton onClick={handleShare} color=\"primary\">\n              <ShareIcon />\n            </IconButton>\n          )}\n        </Box>\n      </Box>\n\n      <Paper\n        elevation={3}\n        sx={{\n          flex: 1,\n          overflow: 'auto',\n          mb: 2,\n          p: 2,\n          bgcolor: 'background.paper',\n        }}\n      >\n        <List>\n          {messages.map((message, index) => (\n            <React.Fragment key={index}>\n              {renderMessage(message)}\n              {index < messages.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n          <div ref={messagesEndRef} />\n        </List>\n      </Paper>\n\n      <Box sx={{ display: 'flex', gap: 1 }}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"Ask about ML papers...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSend}\n          disabled={!input.trim()}\n        >\n          <SendIcon />\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}